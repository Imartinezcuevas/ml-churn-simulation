services:
  kafka:
    image: confluentinc/cp-kafka:8.1.0
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"

  kafka-init:
    image: confluentinc/cp-kafka:8.1.0
    depends_on:
      - kafka
    entrypoint: >
      bash -c "
        sleep 5 &&
        kafka-topics --create --if-not-exists --topic signups_topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
        kafka-topics --create --if-not-exists --topic activity_topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
        kafka-topics --create --if-not-exists --topic support_topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
        kafka-topics --create --if-not-exists --topic billing_topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
      "
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: churn_db
    ports:
      - "5432:5432"
    volumes:
      - ./docker/init_db:/docker-entrypoint-initdb.d